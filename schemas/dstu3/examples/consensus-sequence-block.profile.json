{
  "resourceType": "StructureDefinition",
  "id": "consensus-sequence-block",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/consensus-sequence-block",
  "name": "Profile for Consensus Sequence Block",
  "status": "draft",
  "publisher": "Health Level Seven International (Clinical Genomics)",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://www.hl7.org/Special/committees/clingenomics"
        }
      ]
    }
  ],
  "date": "2015-09-11",
  "description": "Describes consensus sequence block used in HLA typing report",
  "fhirVersion": "1.4.0",
  "kind": "resource",
  "abstract": false,
  "baseType": "Sequence",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Sequence",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "path": "Sequence",
        "name": "Consensus-sequence-block",
        "short": "A Sequence",
        "definition": "Variation and Sequence data.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Sequence",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Sequence"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "w5",
            "map": "clinical.diagnostics"
          }
        ]
      },
      {
        "path": "Sequence.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
        "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.meta",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Meta"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.implicitRules",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true,
        "isSummary": true
      },
      {
        "path": "Sequence.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.language",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language.",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "Sequence.text",
        "short": "Text summary of the resource, for human interpretation",
        "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.text",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "Sequence.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "PhaseSet",
        "short": "Phase Set",
        "definition": "A phase set identifier to associate different consensussequence-blocks.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockPhaseSet"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "ExpectedCopyNumber",
        "short": "Expected Copy Number",
        "definition": "To indicated how many copies of the sequence block was expected.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockExpectedCopyNumber"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "Continuity",
        "short": "Continuity",
        "definition": "A continuity flag to indicate whether a gap exists between blocks.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockContinuity"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "Strand",
        "short": "Strand",
        "definition": "Strand.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockStrand"
            ]
          }
        ]
      },
      {
        "path": "Sequence.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.type",
        "short": "AA | DNA | RNA",
        "definition": "Amino acid / cDNA transcript / RNA variation.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Sequence.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "Type if a sequence -- DNA, RNA, or amino acid sequence",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sequence-type"
          }
        }
      },
      {
        "path": "Sequence.patient",
        "short": "Who and/or what this is about",
        "definition": "The patient, or group of patients whose sequencing results are described by this resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.patient",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Patient"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.specimen",
        "short": "Specimen used for sequencing",
        "definition": "Specimen used for sequencing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.specimen",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Specimen"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.device",
        "short": "The method for sequencing",
        "definition": "The method for sequencing, for example, chip information.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.device",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Device"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quantity",
        "short": "Quantity of the sequence",
        "definition": "Quantity of the sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.quantity",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Quantity"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.species",
        "short": "Supporting tests of human, viruses, and bacteria",
        "definition": "The organism from which sample of the sequence was extracted. Supporting tests of human, viruses, and bacteria.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.species",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "Species of the organism from which the sequence was extracted",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sequence-species"
          }
        }
      },
      {
        "path": "Sequence.referenceSeq",
        "short": "Reference sequence",
        "definition": "Reference Sequence. It can be described in two ways. One is provide the unique identifier of reference sequence submitted to NCBI. The start and end position of window on reference sequence should be defined.  The other way is using  genome build, chromosome number,and also the start, end position of window (this method is specifically for DNA reference sequence) .",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Sequence.referenceSeq",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.referenceSeq.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.referenceSeq.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.referenceSeq.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.referenceSeq.chromosome",
        "short": "The chromosome containing the genetic finding",
        "definition": "The chromosome containing the genetic finding. The value set will be 1-22, X, Y when the species is human without chromosome abnormality. Otherwise,  NCBI-Gene code system should be used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.chromosome",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "Chromosome number for human",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/chromosome-human"
          }
        }
      },
      {
        "path": "Sequence.referenceSeq.genomeBuild",
        "short": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'",
        "definition": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.genomeBuild",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.referenceSeq.referenceSeqId",
        "short": "Reference identifier",
        "definition": "Reference identifier of reference sequence submitted to NCBI. It must match the type in the Sequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequences.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.referenceSeqId",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "Reference identifier",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sequence-referenceSeq"
          }
        }
      },
      {
        "path": "Sequence.referenceSeq.referenceSeqPointer",
        "short": "A Pointer to another Sequence entity as refence sequence",
        "definition": "A Pointer to another Sequence entity as refence sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.referenceSeqPointer",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Sequence"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.referenceSeq.referenceSeqString",
        "short": "A Reference Sequence string",
        "definition": "A Reference Sequence string.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.referenceSeqString",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.referenceSeq.windowStart",
        "short": "0-based start position (inclusive) of the window on the  reference sequence",
        "definition": "0-based start position (inclusive) of the window on the reference sequence.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.windowStart",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.referenceSeq.windowEnd",
        "short": "0-based end position (exclusive) of the window on the reference sequence",
        "definition": "0-based end position (exclusive) of the window on the reference sequence.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Sequence.referenceSeq.windowEnd",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation",
        "short": "Variation info in this sequence",
        "definition": "Variation info in this sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.variation.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.variation.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.variation.start",
        "short": "0-based start position (inclusive) of the variation on the  reference sequence",
        "definition": "0-based start position (inclusive) of the variation on the  reference sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation.start",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation.end",
        "short": "0-based end position (exclusive) of the variation on the reference sequence",
        "definition": "0-based end position (exclusive) of the variation on the reference sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation.end",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation.observedAllele",
        "short": "Nucleotide(s)/amino acids from start position to stop position of observed variation",
        "definition": "Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation.observedAllele",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation.referenceAllele",
        "short": "Nucleotide(s)/amino acids from start position to stop position of reference variation",
        "definition": "Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation.referenceAllele",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.variation.cigar",
        "short": "Extended CIGAR string for aligning the sequence with reference bases",
        "definition": "Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.variation.cigar",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quality",
        "short": "Sequence Quality",
        "definition": "Quality for sequence quality vary by platform reflecting differences in sequencing chemistry and digital processing.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Sequence.quality",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quality.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.quality.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.quality.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.quality.start",
        "short": "0-based start position (inclusive) of the sequence",
        "definition": "0-based start position (inclusive) of the sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.quality.start",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quality.end",
        "short": "0-based end position (exclusive) of the sequence",
        "definition": "0-based end position (exclusive) of the sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.quality.end",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quality.score",
        "short": "Quality score",
        "definition": "Quality score.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.quality.score",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Quantity"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.quality.method",
        "short": "Method for quality",
        "definition": "Method for quality.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.quality.method",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.allelicState",
        "short": "The level of occurrence of a single DNA Sequence Variation within a set of chromosomes: Heteroplasmic / Homoplasmic / Homozygous / Heterozygous / Hemizygous",
        "definition": "The level of occurrence of a single DNA Sequence Variation within a set of chromosomes. Heterozygous indicates the DNA Sequence Variation is only present in one of the two genes contained in homologous chromosomes. Homozygous indicates the DNA Sequence Variation is present in both genes contained in homologous chromosomes. Hemizygous indicates the DNA Sequence Variation exists in the only single copy of a gene in a non- homologous chromosome (the male X and Y chromosome are non-homologous). Hemiplasmic indicates that the DNA Sequence Variation is present in some but not all of the copies of mitochondrial DNA. Homoplasmic indicates that the DNA Sequence Variation is present in all of the copies of mitochondrial DNA.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.allelicState",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "LOINC answer list for AllelicState",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/LOINC-53034-5-answerlist"
          }
        }
      },
      {
        "path": "Sequence.allelicFrequency",
        "short": "Allele frequencies",
        "definition": "Allele frequencies.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.allelicFrequency",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "decimal"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.copyNumberEvent",
        "short": "Copy Number Event: Values: amplificaiton / deletion / LOH",
        "definition": "Values: amplificaiton / deletion / LOH.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.copyNumberEvent",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "Copy Number Event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/copy-number-event"
          }
        }
      },
      {
        "path": "Sequence.readCoverage",
        "short": "Average number of reads representing a given nucleotide in the reconstructed sequence",
        "definition": "Coverage (read depth or depth) is the average number of reads representing a given nucleotide in the reconstructed sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.readCoverage",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.repository",
        "short": "External repository",
        "definition": "Configurations of the external repository.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Sequence.repository",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.repository.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.repository.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.repository.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.repository.url",
        "short": "URI of the repository",
        "definition": "URI of an external repository which contains further details about the genetics data.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.repository.url",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.repository.name",
        "short": "Name of the repository",
        "definition": "URI of an external repository which contains further details about the genetics data.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.repository.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.repository.variantId",
        "short": "Id of the variant",
        "definition": "Id of the variation in this external repository.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.repository.variantId",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.repository.readId",
        "short": "Id of the read",
        "definition": "Id of the read in this external repository.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.repository.readId",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.pointer",
        "short": "Pointer to next atomic sequence",
        "definition": "Pointer to next atomic sequence which at most contains one variation.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Sequence.pointer",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Sequence"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.observedSeq",
        "short": "Observed Sequence",
        "definition": "Observed Sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.observedSeq",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.observation",
        "short": "Observation-genetics",
        "definition": "Analysis of the sequence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.observation",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Observation"
            ]
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation",
        "definition": "Structural variant.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.precisionOfBoundaries",
        "short": "Precision of boundaries",
        "definition": "Precision of boundaries.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.precisionOfBoundaries",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.reportedaCGHRatio",
        "short": "Structural Variant reported aCGH ratio",
        "definition": "Structural Variant reported aCGH ratio.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.reportedaCGHRatio",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "decimal"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.length",
        "short": "Structural Variant Length",
        "definition": "Structural Variant Length.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.length",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.outer",
        "definition": "Structural variant outer.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.outer",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.outer.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.outer.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.outer.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.outer.start",
        "short": "Structural Variant Outer Start-End",
        "definition": "Structural Variant Outer Start-End.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.outer.start",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.outer.end",
        "short": "Structural Variant Outer Start-End",
        "definition": "Structural Variant Outer Start-End.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.outer.end",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.inner",
        "definition": "Structural variant inner.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.inner",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.inner.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.inner.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.inner.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Sequence.structureVariation.inner.start",
        "short": "Structural Variant Inner Start-End",
        "definition": "Structural Variant Inner Start-End.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.inner.start",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      },
      {
        "path": "Sequence.structureVariation.inner.end",
        "short": "Structural Variant Inner Start-End",
        "definition": "Structural Variant Inner Start-End.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Sequence.structureVariation.inner.end",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Sequence",
        "name": "Consensus-sequence-block",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Sequence"
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "PhaseSet",
        "short": "Phase Set",
        "definition": "A phase set identifier to associate different consensussequence-blocks.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockPhaseSet"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "ExpectedCopyNumber",
        "short": "Expected Copy Number",
        "definition": "To indicated how many copies of the sequence block was expected.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockExpectedCopyNumber"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "Continuity",
        "short": "Continuity",
        "definition": "A continuity flag to indicate whether a gap exists between blocks.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockContinuity"
            ]
          }
        ]
      },
      {
        "path": "Sequence.extension",
        "name": "Strand",
        "short": "Strand",
        "definition": "Strand.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sequence-consensus-sequence-blockStrand"
            ]
          }
        ]
      },
      {
        "path": "Sequence.variation",
        "min": 0,
        "max": "1"
      }
    ]
  }
}